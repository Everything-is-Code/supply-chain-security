apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: git
  resourceVersion: '1593064'
  name: git-update-deployment
  uid: 232bc72e-e117-4627-801d-a56abc7031e5
  creationTimestamp: '2023-12-17T14:24:09Z'
  generation: 2
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:tekton.dev/pipelines.minVersion': {}
            'f:tekton.dev/tags': {}
          'f:labels':
            .: {}
            'f:app.kubernetes.io/version': {}
            'f:operator.tekton.dev/provider-type': {}
        'f:spec':
          .: {}
          'f:description': {}
          'f:params': {}
          'f:results': {}
          'f:steps': {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2023-12-17T14:35:33Z'
  namespace: demo-secure-images
  labels:
    app.kubernetes.io/version: '0.1'
    operator.tekton.dev/provider-type: community
spec:
  description: This Task can be used to update image digest in a Git repo using kustomize
  params:
    - name: GIT_REPOSITORY
      type: string
    - name: GIT_USERNAME
      type: string
    - name: CURRENT_IMAGE
      type: string
    - name: NEW_IMAGE
      type: string
    - name: NEW_DIGEST
      type: string
    - name: KUSTOMIZATION_PATH
      type: string
    - description: Secret containing the Git Token
      name: GIT_TOKEN
      type: string
  results:
    - description: The commit SHA
      name: commit
      type: string
  steps:
    - image: 'docker.io/alpine/git:v2.26.2'
      name: git-clone
      resources: {}
      script: |
        rm -rf git-update-digest-workdir
        git clone $(params.GIT_REPOSITORY) git-update-digest-workdir
      workingDir: $(workspaces.workspace.path)
    - image: 'k8s.gcr.io/kustomize/kustomize:v3.8.7'
      name: update-digest
      resources: {}
      script: >
        cd git-update-digest-workdir/$(params.KUSTOMIZATION_PATH)

        /app/kustomize edit set image
        $(params.CURRENT_IMAGE)=$(params.NEW_IMAGE)@$(params.NEW_DIGEST)


        echo "##########################"

        echo "### kustomization.yaml ###"

        echo "##########################"

        cat kustomization.yaml
      workingDir: $(workspaces.workspace.path)
    - env:
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              key: git-token
              name: $(params.GIT_TOKEN)
      image: 'docker.io/alpine/git:v2.26.2'
      name: git-commit
      resources: {}
      script: >
        cd git-update-digest-workdir

        git config user.email "tekton-pipelines-ci@redhat.com"

        git config user.name "tekton-pipelines-ci"


        git status

        git add $(params.KUSTOMIZATION_PATH)/kustomization.yaml

        # git commit -m "[$(context.pipelineRun.name)] Image digest updated"

        git commit -m "[ci] Image digest updated"


        git remote add auth-origin $(echo $(params.GIT_REPOSITORY) | sed -E
        "s#http://(.*)#http://$(params.GIT_USERNAME):$(params.GIT_TOKEN)@\1#g")

        git push auth-origin master


        RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"

        EXIT_CODE="$?"

        if [ "$EXIT_CODE" != 0 ]

        then
          exit $EXIT_CODE
        fi

        # Make sure we don't add a trailing newline to the result!

        echo -n "$RESULT_SHA" > $(results.commit.path)
      workingDir: $(workspaces.workspace.path)
  workspaces:
    - description: The workspace consisting of maven project.
      name: workspace
