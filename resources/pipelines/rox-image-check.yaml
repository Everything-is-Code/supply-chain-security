apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: rox-image-scan
  resourceVersion: '1648828'
  uid: 5cd70f91-b4dd-4dcf-a3b0-47cf938d4861
spec:
  params:
    - description: >-
        Secret containing the address:port tuple for StackRox Central (example -
        rox.stackrox.io:443)
      name: rox_central_endpoint
      type: string
    - description: Secret containing the StackRox API token with CI permissions
      name: rox_api_token
      type: string
    - description: 'Full name of image to scan (example -- gcr.io/rox/sample:5.0-rc1)'
      name: image
      type: string
    - description: Digest in sha256 hash format of the image to scan
      name: image_digest
      type: string
  steps:
    - env:
        - name: ROX_API_TOKEN
          valueFrom:
            secretKeyRef:
              key: rox_api_token
              name: $(params.rox_api_token)
        - name: ROX_CENTRAL_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: rox_central_endpoint
              name: $(params.rox_central_endpoint)
      image: centos
      name: rox-image-scan
      resources: {}
      script: >
        #!/usr/bin/env bash

        set +x

        export NO_COLOR="True"

        curl -k -s -L -H "Authorization: Bearer $ROX_API_TOKEN" \
        https://$ROX_CENTRAL_ENDPOINT/api/cli/download/roxctl-linux --output \
        ./roxctl  > /dev/null; echo "Getting roxctl" 

        chmod +x ./roxctl > /dev/null

        echo "## Scanning image $(params.image)@$(params.image_digest)"

        ./roxctl image check --insecure-skip-tls-verify -e $ROX_CENTRAL_ENDPOINT \
        --image $(params.image)@$(params.image_digest) 
      workingDir: /workspace/source
  workspaces:
    - name: source
